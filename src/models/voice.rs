/*
 * Cartesia REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2024-06-10
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Voice {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "user_id")]
    pub user_id: String,
    #[serde(rename = "is_public")]
    pub is_public: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "embedding")]
    pub embedding: Vec<f64>,
}

impl Voice {
    pub fn new(id: String, user_id: String, is_public: bool, name: String, description: String, created_at: String, embedding: Vec<f64>) -> Voice {
        Voice {
            id,
            user_id,
            is_public,
            name,
            description,
            created_at,
            embedding,
        }
    }
}

